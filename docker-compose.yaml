services:
  vanilla:
    container_name: mc_vanilla
    image: itzg/minecraft-server
    tty: true
    stdin_open: true
    environment:
      - SERVER_NAME
      - ENABLE_ROLLING_LOGS
      - JVM_OPTS
      - EULA
      - MOTD
      - SEED
      - DIFFICULTY
      - MAX_PLAYERS
      - MAX_WORLD_SIZE
      - ENABLE_COMMAND_BLOCK
      - SNOOPER_ENABLED
      - VIEW_DISTANCE
      - PVP
      - LEVEL
      - VERSION
      - MODE
      - ALLOW_FLIGHT
      - USE_NATIVE_TRANSPORT
      - SIMULATION_DISTANCE
      - STOP_SERVER_ANNOUNCE_DELAY
      - GUI
      - SPAWN_PROTECTION
      - ENABLE_RCON
      - RCON_PORT
      - RCON_PASSWORD
    ports:
      - "25565:25565/tcp"
      - "25565:25565/udp"
    volumes:
      - ${MINECRAFT_DATA_PATH}:/data
      - /etc/timezone:/etc/timezone:ro
    restart: always
    networks:
      - main-application-network2
  
  backup:
    image: itzg/mc-backup
    depends_on:
      - vanilla
    environment:
      - BACKUP_INTERVAL
      - RCON_HOST
      - PRUNE_BACKUPS_DAYS
      - RCON_PORT
      - RCON_PASSWORD
    volumes:
      - ${MINECRAFT_DATA_PATH}:/data:ro
      - ${MINECRAFT_BACKUP_DATA_PATH}:/backups
      - /etc/timezone:/etc/timezone:ro
    networks:
      - main-application-network2

  discord-srv-go:
    build:
      context: ./discord-srv-go
      dockerfile: ./build/Dockerfile.prod
    container_name: discord-srv-go
    depends_on:
      - vanilla
    restart: always
    environment:
      - MINECRAFT_LOG_PATH
      - DISCORD_WEBHOOK_URL
    volumes:
      - ${MINECRAFT_DATA_PATH}:/data:ro
    networks:
      - main-application-network2

networks:
  main-application-network2:
    external: true
    
